{"version":3,"sources":["components/Navbar.js","components/TokenComponents/GiveAlowance.js","components/TokenComponents/BuyTokens.js","components/TokenComponents/TransferTokens.js","components/TokenComponents/TransferFromTokens.js","components/YourTokens.js","components/ColorsComponents/BuyColors.js","components/ColorsComponents/SellColors.js","components/ColorsComponents/AddColor.js","components/YourColors.js","components/Loading.js","components/App.js","serviceWorker.js","index.js"],"names":["Navbar","_ref","account","react_default","a","createElement","className","href","GiveAlowance","_this","this","onSubmit","e","preventDefault","value","tokens","toString","props","approve","address","then","r","console","log","type","ref","input","placeholder","React","Component","BuyTokens","buyTokens","TransferTokens","transfer","TransferFromTokens","transferFrom","addressFrom","addressTo","YourTokens","react_router_dom","balance","supply","Fragment","to","react_router","exact","path","TokenComponents_BuyTokens","TokenComponents_TransferTokens","TokenComponents_TransferFromTokens","TokenComponents_GiveAlowance","BuyColors","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","bought","_this2","colors","map","item","i","styleObj","background","color","price","key","style","onClick","buyColor","SellColors","personColors","person","owner","accountLong","priceToSell","sellColor","AddColor","addColor","costam","name","time","mainAccount","ColorsComponents_BuyColors","ColorsComponents_SellColors","peopleItemsCount","ColorsComponents_AddColor","Loading","role","MyDefaultComponent","App","loading","loadWeb3","loadContract","loadAccount","window","ethereum","on","asyncToGenerator","regenerator_default","mark","_callee","accounts","wrap","_context","prev","next","stop","_x","apply","arguments","web3","Web3","enable","currentProvider","alert","eth","getAccounts","accountShort","substring","contract","methods","balanceOf","tokensLeft","mainPerson","colorsCount","getTime","toNumber","hours","Math","floor","minutes","secounds","setState","numberTest","concat","toConsumableArray","z","people","net","getId","networkId","CryptoColors","networks","networkData","Contract","abi","id","send","from","error","result","_this3","checkBlockNumber","amout","_this4","_this5","_this6","ammout","_this7","_this8","_this9","sleep","milliseconds","Promise","resolve","setTimeout","getBlockNumber","blockNumber","blockNumberNew","components_Navbar","components_Loading","components_YourTokens","bind","YourColors","numberItems","component","Boolean","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.07c1ce78.chunk.js","sourcesContent":["import './App.css'\n\nimport React from 'react'\n    //Navbar with account address\n    function Navbar({account}) {\n            return(\n                <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                    <div className=\"container\">\n                        <a className=\"navbar-brand text-center\" href=\"index.html\"><h2>Crypto-Colors</h2></a>\n                        <span className=\"text-white ml-auto \">\n                            <h4 className=\"text-white d-none d-lg-block\">Your account: {account} </h4>\n                        </span>\n                    </div>\n                </nav>\n            );\n    }\n\nexport default Navbar\n","import React from 'react'\r\n//Giving alowance to someone to use our wallet (local tokens wallet)\r\nclass GiveAlowance extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"jumbotron container\">\r\n                <h1 className=\"display-4 text-center font-weight-bolder\">Give permision to transfer your tokens</h1>\r\n                <p className=\"lead font-weight-bolder text-center\">Now you are able to give someone permision to transfer specified number of your tokens. <br/><span className=\"text-danger\">Be careful!</span></p>\r\n                <hr className=\"my-4\"/>\r\n                <form className=\"form-inline row justify-content-center p-2 rounded\" onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    let value = this.tokens.value*1000000000000000000;\r\n                    value = value.toString();\r\n                    this.props.approve(this.address.value, value).then(r  => {\r\n                        console.log('transation done');\r\n                    });\r\n                }}>\r\n                    <input type=\"text\" ref={(input) => this.address = input} className=\"form-control col-12 col-sm-5 mr-sm-3 mb-2 mb-sm-0\" placeholder=\"Address\" />\r\n                    <input type=\"text\" ref={(input) => this.tokens = input} className=\"form-control col-12 col-sm-3 mb-2 mb-sm-0\" placeholder=\"Tokens amout\" />\r\n                    <button type=\"submit\" className=\"btn btn-primary ml-3 \">Give permit</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GiveAlowance","import React from 'react'\r\n//Buing tokens for REAL ethereum\r\nclass BuyTokens extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"jumbotron container\">\r\n                <h1 className=\"display-4 text-center font-weight-bolder\">Buy tokens</h1>\r\n                <p className=\"lead font-weight-bolder text-center\">Now you are able to buy some tokens using your REAL ethereum.\r\n                    <span className=\"text-danger\">1 ETH = 1 Token </span></p>\r\n                <hr className=\"my-4\"/>\r\n                <form className=\"form-inline row justify-content-center p-2 rounded\" onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    this.props.buyTokens(this.tokens.value*1000000000000000000);\r\n                }}>\r\n                    <input type=\"text\" ref={(input) => this.tokens = input} className=\"form-control col-5\" placeholder=\"Tokens amout\" />\r\n                    <button type=\"submit\" className=\"btn btn-primary ml-3\">Buy Tokens</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BuyTokens","import React from 'react'\r\n//Transfering tokens from our account\r\nclass TransferTokens extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"jumbotron container\">\r\n                <h1 className=\"display-4 text-center font-weight-bolder\">Transfer tokens from your account</h1>\r\n                <p className=\"lead font-weight-bolder text-center\">Now you are able to transfer some tokens to someone else. </p>\r\n                <hr className=\"my-4\"/>\r\n                <form className=\"form-inline row justify-content-center p-2 rounded\" onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    let value = this.tokens.value*1000000000000000000;\r\n                    value = value.toString();\r\n                    this.props.transfer(this.address.value, value);\r\n                }}>\r\n                    <input type=\"text\" ref={(input) => this.address = input} className=\"form-control col-12 col-sm-5 mr-sm-3 mb-2 mb-sm-0\" placeholder=\"Address to\" />\r\n                    <input type=\"text\" ref={(input) => this.tokens = input} className=\"form-control col-12 col-sm-3 mb-2 mb-sm-0\" placeholder=\"Tokens amout\" />\r\n                    <button type=\"submit\" className=\"btn btn-primary ml-3 \">Send tokens</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TransferTokens","import React from 'react'\r\n//Transfering tokens from one account to another\r\nclass TransferFromTokens extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"jumbotron container\">\r\n                <h1 className=\"display-4 text-center font-weight-bolder\">Transfer tokens from someone's account</h1>\r\n                <p className=\"lead font-weight-bolder text-center\">Now you are able to transfer some tokens from someone's else account. <span className=\"text-danger\">You must have appropriate permission </span></p>\r\n                <hr className=\"my-4\"/>\r\n                <form className=\"form-inline row justify-content-center p-2 rounded\" onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    let value = this.tokens.value*1000000000000000000;\r\n                    value = value.toString();\r\n                    this.props.transferFrom(this.addressFrom.value,this.addressTo.value,value).then((e) => {\r\n                        console.log(123);\r\n                    });\r\n                }}>\r\n                    <input type=\"text\" ref={(input) => this.addressFrom = input} className=\"form-control col-5 mr-2 mb-2\" placeholder=\"Address from\" />\r\n                    <input type=\"text\" ref={(input) => this.addressTo = input} className=\"form-control col-5 mb-2\" placeholder=\"Address to\" />\r\n                    <input type=\"text\" ref={(input) => this.tokens = input} className=\"form-control col-5\" placeholder=\"Tokens amout\" />\r\n                    <button type=\"submit\" className=\"btn btn-primary ml-2 col-5\">Send tokens</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default  TransferFromTokens","import React from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\nimport GiveAlowance from \"./TokenComponents/GiveAlowance\";\nimport BuyTokens from \"./TokenComponents/BuyTokens\";\nimport TransferTokens from \"./TokenComponents/TransferTokens\";\nimport TransferFromTokens from \"./TokenComponents/TransferFromTokens\";\n//Tokens part of the website\nclass YourTokens extends React.Component {\n    render() {\n        return (\n            <Router>\n            <div>\n                <div className=\"jumbotron container mb-0\">\n                    <h1 className=\"display-4 \">Hi {this.props.account}!</h1><h1 className=\"display-5\"> <br />Your ballance is {this.props.balance} STE </h1>\n                    <p className=\"lead font-weight-bolder\">There you can safely buy, send and do anything you want with your local tokens</p>\n                    <hr className=\"my-4\" />\n                    <p className=\"lead font-weight-bolder\">There is also  <span className=\"text-danger\">{this.props.supply} </span> tokens left</p>\n                </div>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <>\n                            <Link to=\"/BuyTokens\" className=\"col d-inline-block bg-success text-white rounded m-1 text-center\">\n                                <h1 className=\"mt-4\">Buy Tokens</h1>\n                            </Link>\n                            <Link to=\"/TransferTokens\" className=\"col d-inline-block bg-primary text-white rounded m-1 text-center\">\n                                <h1>Transfer Tokens</h1>\n                            </Link>\n                            <Link to=\"/TransferFromTokens\" className=\"col d-inline-block bg-danger text-white rounded m-1 text-center\">\n                                <h1>Transfer From</h1>\n                            </Link>\n                            <Link to=\"/GiveAlowance\" className=\"col d-inline-block bg-warning text-white rounded m-1 text-center\" >\n                                <h1 className=\"mt-4\">Give Permit</h1>\n                            </Link>\n                            </>\n                        </div>\n                    </div>\n                                    <Switch>\n                                        <Route exact path=\"/BuyTokens\">\n                                            <BuyTokens buyTokens={this.props.buyTokens}/>\n                                        </Route>\n                                        <Route exact path=\"/TransferTokens\">\n                                            <TransferTokens transfer={this.props.transfer}/>\n                                        </Route>\n                                        <Route exact path=\"/TransferFromTokens\">\n                                            <TransferFromTokens transferFrom={this.props.transferFrom}/>\n                                        </Route>\n                                        <Route exact path=\"/GiveAlowance\">\n                                            <GiveAlowance approve={this.props.approve}/>\n                                        </Route>\n                                    </Switch>\n            </div>\n            </Router>\n        );\n    }\n}\n\n\nexport default YourTokens\n","import React from 'react'\r\n\r\nclass BuyColors extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            bought: []\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"jumbotron container\">\r\n                <h1 className=\"display-4 text-center font-weight-bolder\">Buy New Colors</h1>\r\n                <p className=\"lead font-weight-bolder text-center\">Now you are able to buy some colors using your tokens.</p>\r\n                <p className=\"lead font-weight-bolder text-center\"><span className=\"text-danger display-3\">Click to buy!</span></p>\r\n                <hr className=\"my-4\"/>\r\n                <div className=\"row\">\r\n                    {this.props.colors.map((item, i) => {\r\n                        const styleObj = {\r\n                            background: item.color,\r\n                        };\r\n                        let price = item.price / 1000000000000000000;\r\n                        price = price.toString();\r\n                        if(item.bought===false) {\r\n                            return (\r\n                                <div className=\"col-lg-4 col-md-6 col-12 rounded color mb-3\">\r\n                                    <div key={i} className=\"rounded row m-1  align-items-center justify-content-center\" style={styleObj} onClick={(e) => {\r\n                                        this.props.buyColor(i)\r\n                                    }}><h1 className=\"text-center\">{price} STE</h1></div>\r\n                                </div>\r\n                            );\r\n                        }\r\n                    })}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BuyColors","import React from 'react'\r\n\r\nclass SellColors extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"jumbotron container\">\r\n                <h1 className=\"display-4 text-center font-weight-bolder\">Sell Your Colors</h1>\r\n                <p className=\"lead font-weight-bolder text-center\">Now you are able to sell colors that you own.</p>\r\n                <p className=\"lead font-weight-bolder text-center\"><span className=\"text-danger display-3\">Type below the price and then click on item you want to sell.</span></p>\r\n                <hr className=\"my-4\"/>\r\n                <div className=\"form-inline row justify-content-center p-2 rounded\">\r\n                    <input type=\"text\" ref={(input) => this.price = input} className=\"form-control col-12 col-sm-5 mr-sm-3 mb-2 mb-sm-0\" placeholder=\"Price\" />\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    {this.props.personColors.map((item, i) => {\r\n\r\n                        if(this.props.person[i] !== 999) {\r\n                            if(this.props.colors[this.props.person[i]].owner===this.props.accountLong && item.bought === true ) {\r\n                               const styleObj = {\r\n                                   background: item.color,\r\n                               };\r\n                               let price = item.price / 1000000000000000000;\r\n                               price = price.toString()\r\n                               return (\r\n                                   <div key={i} className=\"col-lg-4 col-md-6 col-12 rounded color mb-3\">\r\n                                       <div className=\"rounded row m-1 color  align-items-stretch justify-content-center\" style={styleObj} onClick={(e) => {\r\n                                            let priceToSell = this.price.value*1000000000000000000;\r\n                                            priceToSell = priceToSell.toString()\r\n                                            this.props.sellColor(i, priceToSell)\r\n                                       }}>\r\n                                           <h1 className=\"text-center\">{price} STE</h1>\r\n                                       </div>\r\n                                   </div>\r\n                               );\r\n                            }\r\n                        }\r\n                    })}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SellColors","import React from 'react'\r\n\r\nclass AddColor extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"jumbotron container\">\r\n                <h1 className=\"display-4 text-center font-weight-bolder\">Add New Colors</h1>\r\n                <p className=\"lead font-weight-bolder text-center\">Now you are able to add new tokens. </p>\r\n                <hr className=\"my-4\"/>\r\n                <form className=\"form-inline row justify-content-center p-2 rounded\" onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    let value = this.price.value*1000000000000000000;\r\n                    value = value.toString();\r\n                    this.props.addColor(this.costam.value, value);\r\n                }}>\r\n                    <input name=\"Color Picker\" className=\"form-control col-12 col-sm-5 mr-sm-3 mb-2 mb-sm-0\" ref={(input) => this.costam = input} type=\"color\"/>\r\n                    <input type=\"text\" ref={(input) => this.price = input} className=\"form-control col-12 col-sm-3 mb-2 mb-sm-0\" placeholder=\"Price\" />\r\n                    <button type=\"submit\" className=\"btn btn-primary ml-3\">Add Color</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddColor","import React from 'react'\nimport './App.css';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\nimport BuyColors from \"./ColorsComponents/BuyColors\";\nimport SellColors from \"./ColorsComponents/SellColors\";\nimport AddColor from \"./ColorsComponents/AddColor\";\n//Colors part of the website\nclass YourTokens extends React.Component {\n    render() {\n        return (\n            <Router>\n                <div>\n                    <div className=\"jumbotron container mb-0\">\n                        <h1 className=\"display-4 \">Hi {this.props.account}! Time to new color: <span className=\"text-danger\">{this.props.time}</span></h1><h1 className=\"display-5\"> <br />Your ballance is {this.props.balance} STE</h1>\n                        <p className=\"lead font-weight-bolder\">There you can safely buy, send and do anything you want with your local tokens</p>\n                        <hr className=\"my-4\" />\n                    </div>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <>\n                                <Link to=\"/BuyColors\" className=\"col d-inline-block bg-success text-white rounded m-1 text-center\">\n                                    <h1 className=\"mt-2\">Buy Colors</h1>\n                                </Link>\n                                <Link to=\"/SellColors\" className=\"col d-inline-block bg-primary text-white rounded m-1 text-center\">\n                                    <h1 className=\"mt-2\">Sell Colors</h1>\n                                </Link>\n                                {this.props.mainAccount\n                                ?<Link to=\"/AddColor\" className=\"col d-inline-block bg-danger text-white rounded m-1 text-center\">\n                                        <h1 className=\"mt-2\">Add Colors</h1>\n                                    </Link>\n                                : <p />\n                                }\n                            </>\n                        </div>\n                    </div>\n                    <Switch>\n                        <Route exact path=\"/BuyColors\">\n                            <BuyColors colors={this.props.colors}\n                                       buyColor={this.props.buyColor}\n                            />\n                        </Route>\n                        <Route exact path=\"/SellColors\">\n                            <SellColors sellColor={this.props.sellColor}\n                                        personColors={this.props.personColors}\n                                        peopleItemsCount={this.props.peopleItemsCount}\n                                        person={this.props.person}\n                                        colors={this.props.colors}\n                                        accountLong={this.props.accountLong}\n                            />\n                        </Route>\n                       <Route exact path=\"/AddColor\">\n                                <AddColor addColor={this.props.addColor}/>\n                       </Route>\n\n                    </Switch>\n                </div>\n            </Router>\n        );\n    }\n}\n\n\n\n\nexport default YourTokens\n","import React from 'react'\r\n//Loading component\r\nfunction Loading() {\r\n    return(\r\n    <div className=\"d-flex halfDivided align-items-stretch \">\r\n        <>\r\n            <div className=\"container mt-5\">\r\n                <h1 className=\"text-center display-1 mb-3\">Loading...</h1>\r\n                <div className=\"row justify-content-between\">\r\n                    <div className=\"spinner-grow text-primary\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                    <div className=\"spinner-grow text-success\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                    <div className=\"spinner-grow text-danger\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                    <div className=\"spinner-grow text-warning\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                    <div className=\"spinner-grow text-info\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </></div>\r\n    )\r\n}\r\nexport default Loading","import React, { Component } from 'react';\nimport Navbar from \"./Navbar\"\nimport './App.css';\nimport Web3 from 'web3'\nimport YourTokens from './YourTokens'\nimport YourColors from './YourColors'\nimport CryptoColors from '../abis/CryptoColors'\nimport Loading from \"./Loading\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nclass App extends Component {\n\n    async componentWillMount() {\n        await this.loadWeb3();\n        await this.loadContract();\n        await this.loadAccount();\n        window.ethereum.on('accountsChanged', async (accounts)  => {\n          await this.loadAccount();\n        })\n    }\n\n    //Provide web3 to app\n    async loadWeb3() {\n        if(window.ethereum) {\n            window.web3 = new Web3(window.ethereum)\n            await window.ethereum.enable()\n        } else if (window.web3) {\n            window.web3 = new Web3(window.web3.currentProvider)\n        } else {\n            window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n        }\n    }\n\n    //Loading data from web3 and contract (everything that is needed for app to work well)\n    async loadAccount() {\n        let account = await window.web3.eth.getAccounts();\n        account = account[0];\n        let accountShort = account.substring(0,6);\n        let balance = await this.state.contract.methods.balanceOf(account).call();\n        let supply = await this.state.contract.methods.tokensLeft().call()\n        balance = balance / 1000000000000000000;\n        let mainAccount = await this.state.contract.methods.mainPerson().call();\n        let colorsCount = await this.state.contract.methods.colorsCount().call()\n        let getTime = await this.state.contract.methods.getTime().call()\n\n        //checking and setting hours:minutes:secound to next color\n        if(getTime<900) {\n            getTime = getTime.toNumber()\n            let hours = Math.floor(getTime/3600)\n            let minutes = Math.floor((getTime-(hours*3600))/60)\n            let secounds = getTime-(hours*3600)-(minutes*60);\n            if(hours<10) {\n                hours = '0'+hours;\n            }\n            if(secounds<10) {\n                secounds = '0'+secounds;\n            }\n            if(minutes<10) {\n                minutes = '0'+minutes;\n            }\n            let time = hours + ':' + minutes + ':' + secounds;\n\n            this.setState({time});\n        } else {\n            let time = 'New color can be added';\n            this.setState({time});\n        }\n        //Checking if deployer of the contract is currently connected\n        if(mainAccount === account) {\n            this.setState({mainAccount: true})\n        } else {\n            this.setState({mainAccount: false})\n        }\n        supply = supply/1000000000000000000;\n        supply = supply.toString();\n        this.setState({\n            account: account,\n            accountShort: accountShort,\n            balance: balance,\n            loading: false,\n            colorsCount: colorsCount,\n            colors: [],\n            person: [],\n            numberTest: 0,\n            personColors: [],\n            supply: supply\n        });\n\n        let peopleItemsCount=await this.state.contract.methods.peopleItemsCount(this.state.account).call();\n        peopleItemsCount=peopleItemsCount.toNumber();\n        this.setState({peopleItemsCount});\n\n        for(let i=0; i<this.state.colorsCount; i++) {\n            let item = await this.state.contract.methods.colors(i).call();\n            this.setState({colors : [...this.state.colors, item]})\n\n        }\n        for(let z=0; z<peopleItemsCount;z++) {\n            let person = await this.state.contract.methods.people(this.state.account, z).call();\n            person = person.toNumber();\n            this.setState({ person : [...this.state.person, person]});\n            this.setState({ personColors : [...this.state.personColors, this.state.colors[person]]})\n        }\n    }\n\n        //Loading contract data\n        async loadContract() {\n            const networkId = await window.web3.eth.net.getId();\n            const networkData = await CryptoColors.networks[networkId];\n            if(networkData) {\n                const contract = await window.web3.eth.Contract(CryptoColors.abi, networkData.address);\n                this.setState({contract});\n            } else {\n                alert('Connect to another network')\n            }\n        }\n\n        //Functions section\n        async sellColor(id,price) {\n            await this.state.contract.methods.sellColor(id,price).send({from: this.state.account}, (error, result) => {\n                if(result!=null){\n                    this.checkBlockNumber();\n                }\n            });\n        }\n        async buyTokens(amout) {\n            await this.state.contract.methods.buyTokens().send({from: this.state.account, value: amout}, (error, result) => {\n                if(result!=null){\n                    this.checkBlockNumber();\n                }\n            });\n        }\n        async transfer(address,amout) {\n            await this.state.contract.methods.transfer(address,amout).send({from: this.state.account}, (error, result) => {\n                if(result!=null){\n                    this.checkBlockNumber();\n                }\n            });\n        }\n        async transferFrom(addressFrom, addressTo, amout) {\n            await this.state.contract.methods.transferFrom(addressFrom, addressTo, amout).send({from: this.state.account}, (error, result) => {\n                if(result!=null){\n                    this.checkBlockNumber();\n                }\n            });\n        }\n        async approve(address,ammout) {\n            await this.state.contract.methods.approve(address,ammout).send({from: this.state.account}, (error, result) => {\n                if(result!=null){\n                    this.checkBlockNumber();\n                }\n            });\n        }\n        async addColor(color,price) {\n            await this.state.contract.methods.addColor(color,price).send({from: this.state.account}, (error, result) => {\n                if(result!=null){\n                    this.checkBlockNumber();\n                }\n            });\n        }\n\n        async buyColor(id) {\n            await this.state.contract.methods.buyColor(id).send({from: this.state.account}, (error, result) => {\n                if(result!=null){\n                    this.checkBlockNumber();\n                }\n            });\n        }\n    //Function that checks if transaction is done\n    async checkBlockNumber() {\n        this.setState({loading:true});\n        const sleep = (milliseconds) => {\n            return new Promise(resolve => setTimeout(resolve, milliseconds))\n        };\n        const blockNumber = await window.web3.eth.getBlockNumber();\n        let blockNumberNew = await window.web3.eth.getBlockNumber();\n        while(blockNumber === blockNumberNew) {\n            blockNumberNew = await window.web3.eth.getBlockNumber();\n            await sleep(100);\n        }\n        await this.loadAccount();\n        this.setState({loading:false});\n    }\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            account: null,\n            loading: true\n        }\n    }\n\n    render() {\n      return (\n          <Router>\n              <div className=\"mainDiv\">\n                  <Navbar account={this.state.account} />\n                  {this.state.loading\n                      ? <Loading/>\n                      : <Switch>\n                          <Route exact path=\"/YourTokens\">\n                              <YourTokens balance={this.state.balance}\n                                          account={this.state.accountShort}\n                                          buyTokens={this.buyTokens.bind(this)}\n                                          transfer={this.transfer.bind(this)}\n                                          transferFrom={this.transferFrom.bind(this)}\n                                          approve={this.approve.bind(this)}\n                                          supply={this.state.supply}\n                              />\n                          </Route>\n                          <Route exact path=\"/YourColors\" >\n                              <YourColors account={this.state.accountShort}\n                                          accountLong={this.state.account}\n                                          mainAccount={this.state.mainAccount}\n                                          balance={this.state.balance}\n                                          addColor={this.addColor.bind(this)}\n                                          time={this.state.time}\n                                          colors={this.state.colors}\n                                          buyColor={this.buyColor.bind(this)}\n                                          sellColor={this.sellColor.bind(this)}\n                                          personColors={this.state.personColors}\n                                          numberItems={this.state.numberTest}\n                                          peopleItemsCount={this.state.peopleItemsCount}\n                                          person={this.state.person}\n                              />\n                          </Route>\n                          <Route path=\"/\" component={MyDefaultComponent} />\n                      </Switch>}\n                  </div>\n          </Router>\n      );\n    }\n  }\n        //Default component on the page (it is important because we dont want new components to be added below)\n      function MyDefaultComponent() {\n        return (\n          <>\n              <div className=\"halfDivided align-items-stretch m-0\">\n                  <h1 className=\"display-3 a text-center pt-5 pb-5 text-white\">Website about collecting</h1>\n                  <div className=\"d-none d-md-flex align-items-stretch pt-5 mt-5\">\n                      <div className=\"col-1\"></div>\n                    <Link to=\"/YourTokens\" className=\"col-5 d-flex justify-content-around align-items-around aClass\">\n                      <h1 className=\" display-1 a text-center  font-weight-bold mt-5\">Your Tokens</h1>\n                    </Link>\n                    <Link to=\"/YourColors\" className=\"col-5 d-flex justify-content-center align-items-center aClass\">\n                        <h1 className=\" display-1 a text-center font-weight-bold mt-5\">Your Colors</h1>\n                    </Link>\n                  </div>\n                  <div className=\" d-md-none align-items-stretch pt-5 mt-5\">\n                      <Link to=\"/YourTokens\" className=\" col-12 d-flex justify-content-center align-items-center aClass mb-3\">\n                          <h1 className=\" display-3 a text-center  font-weight-bold\">Your Tokens</h1>\n                      </Link>\n                      <Link to=\"/YourColors\" className=\" col-12 d-flex justify-content-center align-items-center aClass\">\n                          <h1 className=\" display-3 a text-center font-weight-bold m-2\">Your Colors</h1>\n                      </Link>\n                  </div>\n              </div>\n          </>\n        );\n      }\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}